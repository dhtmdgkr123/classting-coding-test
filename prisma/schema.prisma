generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model news {
  id         BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  school_id  BigInt       @db.UnsignedBigInt
  content    String       @db.Text
  created_at DateTime     @default(now()) @db.DateTime(0)
  updated_at DateTime     @default(now()) @db.DateTime(0)
  deleted_at DateTime?    @db.DateTime(0)
  schools    schools      @relation(fields: [school_id], references: [id], onUpdate: Restrict, map: "news_school_id_foreign")
  news_feeds news_feeds[]

  @@index([school_id], map: "news_school_id_foreign")
}

model news_feeds {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  news_id    BigInt   @db.UnsignedBigInt
  student_id BigInt   @db.UnsignedBigInt
  created_at DateTime @default(now()) @db.DateTime(0)
  news       news     @relation(fields: [news_id], references: [id], onUpdate: Restrict, map: "news_feeds_news_id_foreign")
  students   students @relation(fields: [student_id], references: [id], onUpdate: Restrict, map: "news_feeds_student_id_foreign")

  @@index([news_id], map: "news_feeds_news_id_foreign")
  @@index([student_id], map: "news_feeds_student_id_foreign")
}

model schools {
  id            BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  name          String          @db.VarChar(255)
  region        String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.DateTime(0)
  news          news[]
  subscriptions subscriptions[]
}

model students {
  id            BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  name          String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.DateTime(0)
  deleted_at    DateTime?       @db.DateTime(0)
  news_feeds    news_feeds[]
  subscriptions subscriptions[]
}

model subscriptions {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  student_id     BigInt    @db.UnsignedBigInt
  school_id      BigInt    @db.UnsignedBigInt
  subscribe_at   DateTime? @db.DateTime(0)
  unsubscribe_at DateTime? @db.DateTime(0)
  created_at     DateTime  @default(now()) @db.DateTime(0)
  updated_at     DateTime  @default(now()) @db.DateTime(0)
  schools        schools   @relation(fields: [school_id], references: [id], onUpdate: Restrict, map: "subscriptions_school_id_foreign")
  students       students  @relation(fields: [student_id], references: [id], onUpdate: Restrict, map: "subscriptions_student_id_foreign")

  @@index([school_id], map: "subscriptions_school_id_foreign")
  @@index([student_id], map: "subscriptions_student_id_foreign")
}

model users {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  email      String   @db.VarChar(255)
  role       String   @db.VarChar(255)
  password   String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}
